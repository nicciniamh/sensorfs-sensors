'''
module to create plots and reports from sqlite data
'''
import os
import sys
import sqlite3
import pandas as pd
import matplotlib.pyplot as plt
import base64

if sys.platform == 'darwin':
	database = os.path.expanduser('~/Network/pi4/home/nicci/db/datacollect.db')
else:
	database = os.path.expanduser('~/db/datacollect.db')

def get_table_dataframe(database, host,sensor, key, filename=False):
	'''
	get a pandas datafrom from the database fpr host, sensor, key and optionally 
	create a plot and generate html report
	'''
	sql = f"select datetime(time,'unixepoch','localtime') as date, {key} from {host}_{sensor};"
	con = sqlite3.connect(database)
	dataframe = pd.read_sql_query(sql,con)
	con.close()
	if filename:
		plot_data_frame(host,sensor,dataframe,key, filename)
	return dataframe


def plot_data_frame(host,sensor,dataframe,key,filename):
	'''
	plot chart from dataframe and create html report in filename
	'''
	titles = {
		'temp': "Temperature",
		'humidity': "Humitidy",
		"pressure": "Barometer"
	}
	dataframe.columns = ['date', key]

	# Convert 'date' column to datetime
	dataframe['date'] = pd.to_datetime(dataframe['date'])

	# Set 'date' column as index
	dataframe.set_index('date', inplace=True)

	# Plot
	temp = f'/tmp/plot.{os.getpid()}.png'
	dataframe.plot()
	data_min = round(dataframe.min().iloc[0],2)
	data_max = round(dataframe.min().iloc[0],2)
	data_avg = round(dataframe.mean().iloc[0],2)
	plt.xlabel('Date')
	plt.ylabel('Values')
	plt.title(f'')
	plt.savefig(temp)
	with open(temp,'rb') as f:
		imgdata = base64.b64encode(f.read())
	imgdata = imgdata.decode('ascii')
	os.unlink(temp)
	html = f"""
	<!DOCTYPE html>
	<!-- Auto generated by sensors-gui app -->
	<html>
	<head>
	<style>
	body {{
		font-family: Arial;
	}}
	</style>
	<title>{titles[key]} for {sensor} on {host}</title>
	</head>
	<body>
	<h1>{titles[key]} for {sensor} on {host}</h1>
	Minimum {titles[key]}: {data_min}<br/>
	Maximum {titles[key]}: {data_max}<br/>
	Average {titles[key]}  {data_avg}<br/>
	<div>
		<img src="data:image/png;base64, {imgdata}" />
	</div>
	</body>
	</html>
	"""
	with open(filename,'w') as f:
		f.write(html)
if __name__ == "__main__":
	host = 'pi3'
	sensor = 'aht10'
	df = get_table_dataframe(database,host,sensor, 'temp',"chart.html")


